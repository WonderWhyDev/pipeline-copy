name: Validate Backend
on:
  workflow_dispatch:

jobs:
  find_latest_version:
    uses: ./.github/workflows/base_get_latest_repo_version.yml
    with:
      environment: qa
    secrets:
      REPO_TOKEN: ${{ secrets.REPO_READ_TOKEN }}

  validate_backend:
    runs-on: ubuntu-latest
    needs: find_latest_version
    environment:
      name: qa
    steps:
      - name: check out repository for actions
        uses: actions/checkout@v4

      - name: Check out only flutterFlow web folder
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          token: ${{ secrets.REPO_TOKEN }}
          path: wonderWhy
          fetch-depth: 1
          ref:  ${{ needs.find_latest_version.outputs.latest_version }}

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'wonderWhy/yarn.lock'
      - run: |
          cd wonderWhy
          yarn install
          yarn b format
          yarn b lint
          yarn b build
#          yarn b testOnce
      - uses: ./.github/actions/upload_version_file
        with:
          version: ${{ needs.find_latest_version.outputs.latest_version }}

      - run: |
          mkdir backend
          cp -r wonderWhy/backend/prisma backend/
          cp wonderWhy/backend/dist/app.js backend/
          cp wonderWhy/backend/package.json backend/
          cp wonderWhy/backend/deploy/* backend/
          zip -r backend.zip backend

      - uses: ./.github/actions/copy_to_ec2
        with:
          ec2IP: ${{ secrets.EC2_IP }}
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY }}
          awsSecretKey: ${{ secrets.AWS_SECRET_KEY }}
          awsRegion: ${{ secrets.AWS_REGION }}
          ec2User: ${{ secrets.EC2_USER }}
          securityGroupId: ${{ secrets.SECURITY_GROUP_ID }}
          sshKey: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
          fileToCopy: ./backend.zip
          destination: ~/backend.zip
          unzipDestination: ~/
          runScript: |
            cd backend
            sh deploy.sh


#
#
#      - name: Start Docker Container
#        env:
#          MAGNUM_CLIENT_ID: ${{ secrets.MAGNUM_CLIENT_ID }}
#          MAGNUM_CLIENT_SECRET: ${{ secrets.MAGNUM_CLIENT_SECRET }}
#        run : |
#          ssh -t -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }}  << EOF
#            set -e
#            sudo chmod 666 /var/run/docker.sock
#            cd wonderWhy
#            sed -i '/^export CLIENT_ID=/d' ~/.bashrc
#            echo 'export CLIENT_ID=$MAGNUM_CLIENT_ID' >> ~/.bashrc
#            sed -i '/^export CLIENT_SECRET=/d' ~/.bashrc
#            echo 'export CLIENT_SECRET=$MAGNUM_CLIENT_SECRET' >> ~/.bashrc
#            sed -i '/^export ZITADEL_AUTHORITY=/d' ~/.bashrc
#            echo 'export ZITADEL_AUTHORITY="https://auth.magnum.wondermove.in"' >> ~/.bashrc
#            source /home/ec2-user/.bashrc
#            docker-compose stop backend
#            docker-compose up setup -d
#            docker-compose up backend -d
#          EOF


